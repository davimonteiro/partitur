/**
 * generated by Xtext 2.12.0
 */
package io.beethoven.partitur.partitur.util;

import io.beethoven.partitur.partitur.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see io.beethoven.partitur.partitur.PartiturPackage
 * @generated
 */
public class PartiturSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static PartiturPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PartiturSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = PartiturPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case PartiturPackage.PARTITUR_WORKFLOW:
      {
        PartiturWorkflow partiturWorkflow = (PartiturWorkflow)theEObject;
        T result = casePartiturWorkflow(partiturWorkflow);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PartiturPackage.PARTITUR_TASK:
      {
        PartiturTask partiturTask = (PartiturTask)theEObject;
        T result = casePartiturTask(partiturTask);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PartiturPackage.PARTITUR_HANDLER:
      {
        PartiturHandler partiturHandler = (PartiturHandler)theEObject;
        T result = casePartiturHandler(partiturHandler);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PartiturPackage.PARTITUR_CONDITION:
      {
        PartiturCondition partiturCondition = (PartiturCondition)theEObject;
        T result = casePartiturCondition(partiturCondition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PartiturPackage.PARTITUR_COMMAND:
      {
        PartiturCommand partiturCommand = (PartiturCommand)theEObject;
        T result = casePartiturCommand(partiturCommand);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PartiturPackage.HTTP_GET:
      {
        HttpGet httpGet = (HttpGet)theEObject;
        T result = caseHttpGet(httpGet);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PartiturPackage.HTTP_POST:
      {
        HttpPost httpPost = (HttpPost)theEObject;
        T result = caseHttpPost(httpPost);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PartiturPackage.HTTP_PUT:
      {
        HttpPut httpPut = (HttpPut)theEObject;
        T result = caseHttpPut(httpPut);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PartiturPackage.HTTP_DELETE:
      {
        HttpDelete httpDelete = (HttpDelete)theEObject;
        T result = caseHttpDelete(httpDelete);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PartiturPackage.HTTP_HEADER:
      {
        HttpHeader httpHeader = (HttpHeader)theEObject;
        T result = caseHttpHeader(httpHeader);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PartiturPackage.URI_VARIABLES:
      {
        UriVariables uriVariables = (UriVariables)theEObject;
        T result = caseUriVariables(uriVariables);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PartiturPackage.QUERY_PARAM:
      {
        QueryParam queryParam = (QueryParam)theEObject;
        T result = caseQueryParam(queryParam);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PartiturPackage.HTTP_BODY:
      {
        HttpBody httpBody = (HttpBody)theEObject;
        T result = caseHttpBody(httpBody);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Workflow</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Workflow</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePartiturWorkflow(PartiturWorkflow object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Task</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Task</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePartiturTask(PartiturTask object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Handler</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Handler</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePartiturHandler(PartiturHandler object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Condition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Condition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePartiturCondition(PartiturCondition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Command</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Command</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePartiturCommand(PartiturCommand object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Http Get</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Http Get</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseHttpGet(HttpGet object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Http Post</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Http Post</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseHttpPost(HttpPost object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Http Put</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Http Put</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseHttpPut(HttpPut object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Http Delete</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Http Delete</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseHttpDelete(HttpDelete object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Http Header</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Http Header</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseHttpHeader(HttpHeader object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uri Variables</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uri Variables</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUriVariables(UriVariables object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Query Param</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Query Param</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseQueryParam(QueryParam object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Http Body</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Http Body</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseHttpBody(HttpBody object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //PartiturSwitch

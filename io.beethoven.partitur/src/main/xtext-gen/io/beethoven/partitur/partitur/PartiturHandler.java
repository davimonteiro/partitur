/**
 * generated by Xtext 2.12.0
 */
package io.beethoven.partitur.partitur;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Handler</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link io.beethoven.partitur.partitur.PartiturHandler#getName <em>Name</em>}</li>
 *   <li>{@link io.beethoven.partitur.partitur.PartiturHandler#getEvent <em>Event</em>}</li>
 *   <li>{@link io.beethoven.partitur.partitur.PartiturHandler#getConditions <em>Conditions</em>}</li>
 *   <li>{@link io.beethoven.partitur.partitur.PartiturHandler#getCommands <em>Commands</em>}</li>
 * </ul>
 *
 * @see io.beethoven.partitur.partitur.PartiturPackage#getPartiturHandler()
 * @model
 * @generated
 */
public interface PartiturHandler extends EObject
{
  /**
   * Returns the value of the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Name</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' attribute.
   * @see #setName(String)
   * @see io.beethoven.partitur.partitur.PartiturPackage#getPartiturHandler_Name()
   * @model
   * @generated
   */
  String getName();

  /**
   * Sets the value of the '{@link io.beethoven.partitur.partitur.PartiturHandler#getName <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' attribute.
   * @see #getName()
   * @generated
   */
  void setName(String value);

  /**
   * Returns the value of the '<em><b>Event</b></em>' attribute.
   * The literals are from the enumeration {@link io.beethoven.partitur.partitur.EventType}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Event</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Event</em>' attribute.
   * @see io.beethoven.partitur.partitur.EventType
   * @see #setEvent(EventType)
   * @see io.beethoven.partitur.partitur.PartiturPackage#getPartiturHandler_Event()
   * @model
   * @generated
   */
  EventType getEvent();

  /**
   * Sets the value of the '{@link io.beethoven.partitur.partitur.PartiturHandler#getEvent <em>Event</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Event</em>' attribute.
   * @see io.beethoven.partitur.partitur.EventType
   * @see #getEvent()
   * @generated
   */
  void setEvent(EventType value);

  /**
   * Returns the value of the '<em><b>Conditions</b></em>' containment reference list.
   * The list contents are of type {@link io.beethoven.partitur.partitur.PartiturCondition}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Conditions</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Conditions</em>' containment reference list.
   * @see io.beethoven.partitur.partitur.PartiturPackage#getPartiturHandler_Conditions()
   * @model containment="true"
   * @generated
   */
  EList<PartiturCondition> getConditions();

  /**
   * Returns the value of the '<em><b>Commands</b></em>' containment reference list.
   * The list contents are of type {@link io.beethoven.partitur.partitur.PartiturCommand}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Commands</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Commands</em>' containment reference list.
   * @see io.beethoven.partitur.partitur.PartiturPackage#getPartiturHandler_Commands()
   * @model containment="true"
   * @generated
   */
  EList<PartiturCommand> getCommands();

} // PartiturHandler
